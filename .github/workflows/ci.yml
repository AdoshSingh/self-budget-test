name: CI for Self-Budgeting App

on:
  push:
    branches: [main]
    paths:
      - '**'
  pull_request:
    branches: [main]
    paths:
      - '**'

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install backend dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Run backend tests
        run: |
          cd backend
          python -m unittest

  frontend-tests:
    runs-on: ubuntu-latest
    needs: backend-tests

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install frontend dependencies and run tests
        run: |
          cd frontend
          npm install
          npm run lint
          npm test

  check-docker-compose:
    runs-on: ubuntu-latest
    needs: [frontend-tests]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker and Docker Compose
        run: |
          sudo rm /usr/local/bin/docker-compose
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o docker-compose
          chmod +x docker-compose
          sudo mv docker-compose /usr/local/bin

      - name: Build and run with Docker Compose
        run: |
          docker-compose up -d
          RETRIES=30
          SLEEP_DURATION=30
          SUCCESS=false

          echo "Waiting for the application to start and become available..."
          for ((i=0; i<RETRIES; i++)); do
            if curl -f http://localhost:3000/; then
              SUCCESS=true
              break
            fi
            echo "Attempt $((i+1)) of $RETRIES failed, retrying in $SLEEP_DURATION seconds..."
            sleep $SLEEP_DURATION
          done

          if [ "$SUCCESS" = true ]; then
            echo "Successfully connected to the application!"
          else
            echo "Failed to connect to the application after $RETRIES retries."
            exit 1

      - name: Cleanup Docker Compose
        run: |
          docker-compose down
